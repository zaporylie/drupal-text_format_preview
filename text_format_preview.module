<?php
/**
 * @file
 *
 */

/**
 * Implements hook_element_info_alter().
 */
function text_format_preview_element_info_alter(&$type) {
  $type['text_format']['#theme_wrappers'][] = 'text_format_preview_wrapper';
  $type['text_format']['#process'][] = 'text_format_preview_process_text_format';
}

/**
 * Implements hook_theme().
 */
function text_format_preview_theme($existing, $type, $theme, $path) {
  return array(
    'text_format_preview_wrapper' => array(
      'render element' => 'element',
    ),
    'text_format_preview_checkbox_wrapper' => array(
      'render element' => 'element',
    ),
  );
}

function theme_text_format_preview_wrapper($variables) {
  $element = $variables['element'];
  $output = '<div id="text-format-preview-wrapper-' . $element['#id'] . '" class="text-format-preview-wrapper">';
  $output .= $element['#children'];
  $output .= "</div>\n";
  return $output;
}

function text_format_preview_process_text_format($element) {
  $element['autopreview'] = array(
    '#type' => 'checkbox',
    '#title' => t('Autopreview'),
    '#defualt_value' => FALSE,
    '#ajax' => array(
      'callback' => 'text_format_preview_callback',
    ),
    '#attributes' => array(
      'class' => array('text_format_autopreview_checkbox'),
    ),
    '#attached' => array(
      'js' => array(
        drupal_get_path('module', 'text_format_preview') . '/text_format_preview.js',
      ),
    ),
  );
  $element['preview'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('text_format_preview'),
    ),
  );
  return $element;
}

function text_format_preview_callback($form, &$form_state) {
  $commands = array();

  if ($form_state['triggering_element']['#value']) {
    // get form element
    $element = $form;
    for ($i = 0; $i < (count($form_state['triggering_element']['#array_parents']) - 1); $i++) {
      $element = $element[$form_state['triggering_element']['#array_parents'][$i]];
    }

    // get element value
    $value = $form_state['values'];
    for ($i = 0; $i < (count($form_state['triggering_element']['#parents']) - 1); $i++) {
      $value = $value[$form_state['triggering_element']['#parents'][$i]];
    }
    $commands[] = ajax_command_html('#text-format-preview-wrapper-' . $element['#id'] . ' .text_format_preview', check_markup($value['value'], $value['format']));
  }

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}

/**
 * Implements hook_menu().
 */
function text_format_preview_menu() {
  $items['test'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('text_format_preview_test_form'),
    'access callback' => TRUE,
  );
  return $items;
}

function text_format_preview_test_form($form, &$form_state) {
//  $form['#tree'] = TRUE;
  $form['test']['test2']['test3'] = array(
    '#type' => 'text_format',
    '#title' => t('Test'),
  );
  return $form;
}