<?php
/**
 * @file
 * Show live preview for text_format under textarea.
 */

/**
 * Implements hook_element_info_alter().
 */
function text_format_preview_element_info_alter(&$type) {
  $type['text_format']['#theme_wrappers'][] = 'text_format_preview_wrapper';
  $type['text_format']['#process'][] = 'text_format_preview_process_text_format';
}

/**
 * Implements hook_theme().
 */
function text_format_preview_theme($existing, $type, $theme, $path) {
  return array(
    'text_format_preview_wrapper' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Add wrapper to text_format output.
 */
function theme_text_format_preview_wrapper($variables) {
  $element = $variables['element'];

  $attributes = array(
    'id' => 'text-format-preview-wrapper-' . $element['#id'],
    'class' => array('text-format-preview-wrapper'),
  );
  // Add wrapper.
  $output = '<div ' . drupal_attributes($attributes) . '>';
  // Place element children here.
  $output .= $element['#children'];
  // Close wrapper.
  $output .= "</div>\n";

  return $output;
}

/**
 * Modify text_format element.
 */
function text_format_preview_process_text_format($element) {

  // Change default position of format.
  $element['format']['#weight'] = 3;

  $ajax = array(
    'callback' => 'text_format_preview_callback',
  );

  $element['format']['format']['#ajax'] = $ajax;

  // Add autopreview bar with checkbox.
  $element['autopreview'] = array(
    '#type' => 'container',
    '#weight' => 1,
    '#attributes' => array(
      'class' => array('text-format-preview-autopreview'),
    ),
    'checkbox' => array(
      '#type' => 'checkbox',
      '#weight' => 1,
      '#title' => t('Autopreview'),
      '#default_value' => variable_get('text_format_preview_autopreview_default', FALSE),
      '#ajax' => $ajax,
      '#attributes' => array(
        'class' => array('text-format-preview-autopreview-checkbox'),
      ),
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'text_format_preview') . '/text_format_preview.js',
        ),
        'css' => array(
          drupal_get_path('module', 'text_format_preview') . '/text_format_preview.css',
        ),
      ),
    ),
  );

  // Add preview container.
  $element['preview'] = array(
    '#type' => 'container',
    '#weight' => 2,
    '#attributes' => array(
      'class' => array('text-format-preview-preview'),
    ),
  );
  return $element;
}

/**
 * Autopreview checkbox ajax callback.
 */
function text_format_preview_callback($form, &$form_state) {

  $commands = array();

  // Only if triggering checkbox has value TRUE.
  if ($form_state['triggering_element']['#value']) {
    $success = FALSE;
    $path = $form_state['triggering_element']['#parents'];

    while (!empty($path)) {
      // Get value of parent text_format element starting from deepest element.
      $value = $form_state['values'];
      for ($i = 0; $i < count($path); $i++) {
        $value = $value[$path[$i]];
      }

      if (isset($value['format']) && isset($value['value'])) {
        // Element found. No need to run this function any more.
        $success = TRUE;
        break;
      }
      else {
        // Element not found - try harder.
        array_pop($path);
      }
    }

    if ($success) {
      // Send replace command if element has been found.
      $commands[] = array(
        'command' => 'text_format_preview',
        'selector' => NULL,
        'preview' => check_markup($value['value'], $value['format']),
      );
    }
  }

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}

/**
 * Implements hook_menu().
 */
function text_format_preview_menu() {
  $items['admin/config/content/formats/text_format_preview'] = array(
    'title' => 'Text Format Preview settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('text_format_preview_settings'),
    'access arguments' => array('administer site settings'), //@todo
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Module settings form.
 */
function text_format_preview_settings($form, &$form_state) {

  $form['text_format_preview_autopreview_default'] = array(
    '#type' => 'checkbox',
    '#title' => t('Turn on autopreview by default'),
    '#default_value' => variable_get('text_format_preview_autopreview_default', FALSE),
  );

  return system_settings_form($form);
}
